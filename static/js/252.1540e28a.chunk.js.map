{"version":3,"file":"static/js/252.1540e28a.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","webpack://react-homework-template/./src/components/Phonebook/Filter/Filter.module.scss?8b23","components/Phonebook/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Phonebook/ContactForm/ContactForm.module.scss?2da9","components/Phonebook/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Phonebook/ContactList/ContactList.module.scss?fdbd","components/Phonebook/ContactList/ContactList.jsx","webpack://react-homework-template/./src/pages/Phonebook.module.scss?e489","pages/Phonebook.jsx"],"sourcesContent":["export const selectItem = state => state.contacts.item;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filters.filter;","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__Ex1A5\",\"input\":\"Filter_input__+jX2l\",\"par\":\"Filter_par__NwWoq\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { filterValue } from '../../../redux/contacts/filterSlise';\nimport { selectFilter } from '../../../redux/contacts/contactsSelectors';\n// import PropTypes from 'prop-types';\nimport FilterSCSS from './Filter.module.scss';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const onChange = event => {\n    dispatch(filterValue(event.target.value.toLowerCase()));\n  };\n  return (\n    <label htmlFor=\"filter\" className={FilterSCSS.label}>\n      {/* <p className={FilterSCSS.par}>Find contacts by name</p> */}\n      <input\n        className={FilterSCSS.input}\n        onChange={onChange}\n        type=\"filter\"\n        name=\"filter\"\n        value={filter}\n        placeholder=\"Find contacts by name\"\n      />\n    </label>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__TCXtu\",\"label\":\"ContactForm_label__zVCV3\",\"paragraph\":\"ContactForm_paragraph__8Rwen\",\"input\":\"ContactForm_input__PjN8o\",\"button\":\"ContactForm_button__gIpeG\"};","import { useDispatch, useSelector } from 'react-redux';\nimport React, { useState } from 'react';\nimport { selectItem } from 'redux/contacts/contactsSelectors';\nimport { addContact } from 'redux/contacts/requestAPI';\nimport ContactFormSCSS from './ContactForm.module.scss';\n\nconst BASE_STATE = {\n  name: '',\n  number: '',\n};\nconst ContactForm = () => {\n  const [{ name, number }, setState] = useState(BASE_STATE);\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectItem);\n\n  function onChange(eve) {\n    const { name, value } = eve.target;\n    setState(prevState => ({ ...prevState, [name]: value }));\n  }\n  const onSubmit = event => {\n    event.preventDefault();\n    const newContact = {\n      name,\n      number,\n    };\n    if (contacts.some(x => x.name === newContact.name)) {\n      alert(`${newContact.name} is already is contacts`);\n      return;\n    }\n    dispatch(addContact(newContact));\n    setState({ ...BASE_STATE });\n  };\n\n  return (\n    <form onSubmit={onSubmit} className={ContactFormSCSS.form}>\n      <label htmlFor=\"name\" className={ContactFormSCSS.label}>\n        <p className={ContactFormSCSS.paragraph}>Name</p>\n        <input\n          className={ContactFormSCSS.input}\n          onChange={onChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Rosie Simpson\"\n        />\n      </label>\n\n      <label htmlFor=\"number\" className={ContactFormSCSS.label}>\n        <p className={ContactFormSCSS.paragraph}>Number</p>\n        <input\n          className={ContactFormSCSS.input}\n          onChange={onChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"645-17-79\"\n        />\n      </label>\n\n      <button className={ContactFormSCSS.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__xDNud\",\"item\":\"ContactList_item__QtaYu\",\"par\":\"ContactList_par__DuxpW\",\"button\":\"ContactList_button__zafWS\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import PropTypes from 'prop-types';\nimport { selectItem } from 'redux/contacts/contactsSelectors';\nimport { deleteContact } from 'redux/contacts/requestAPI';\nimport { selectFilter } from 'redux/contacts/contactsSelectors';\nimport ContactListSCSS from './ContactList.module.scss';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectItem);\n  const filter = useSelector(selectFilter);\n  const delContacts = event => {\n    dispatch(deleteContact(event.target.name));\n  };\n  const contactFilter = () => {\n    if (filter === '') {\n      return false;\n    }\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter)\n    );\n  };\n  const filterOne = contactFilter();\n  const list = filterOne ? filterOne : contacts;\n  return (\n    <ul className={ContactListSCSS.list}>\n      {list.map(({ id, name, number }) => (\n        <li key={id} className={ContactListSCSS.item}>\n          <p className={ContactListSCSS.par}>\n            {name}: {number}\n          </p>\n          <button\n            className={ContactListSCSS.button}\n            type=\"button\"\n            name={id}\n            onClick={delContacts}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.string.isRequired,\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//     })\n//   ),\n//   deleteContacts: PropTypes.func.isRequired,\n// };\n\nexport default ContactList;","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Phonebook_section__o6Vkf\",\"container\":\"Phonebook_container__1MyeN\",\"header\":\"Phonebook_header__oGb6W\",\"bottom\":\"Phonebook_bottom__7JVs-\",\"contacts\":\"Phonebook_contacts__sXR8K\",\"h2\":\"Phonebook_h2__8luz2\"};","import { useEffect} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAll } from 'redux/contacts/requestAPI';\nimport { selectIsLoading, selectError } from 'redux/contacts/contactsSelectors';\nimport { Loader } from '../components/Loader/Loader';\nimport { Filter } from '../components/Phonebook/Filter/Filter';\nimport ContactForm from '../components/Phonebook/ContactForm/ContactForm';\nimport ContactList from '../components/Phonebook/ContactList/ContactList';\n// import { Section, Containet, H1, DivList } from '../components/App.stiled';\nimport PhonebookSCSS from './Phonebook.module.scss'\n\nconst PhoneBook = () => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n    useEffect(() => {\n        dispatch(fetchAll());\n    }, [dispatch]);\n    return (\n        <section className={PhonebookSCSS.section}>\n            <div className={PhonebookSCSS.container}>\n                {isLoading && !error && <Loader />}\n                <h1 className={PhonebookSCSS.header}>Phonebook</h1>\n                <Filter />\n                <div className={PhonebookSCSS.bottom}>\n                    <ContactForm />\n                    <div className={PhonebookSCSS.contacts}>\n                        <h2 className={PhonebookSCSS.h2}>Contacts</h2> \n                        <ContactList />\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\nexport default PhoneBook;"],"names":["selectItem","state","contacts","item","selectIsLoading","isLoading","selectError","error","selectFilter","filters","filter","Filter","dispatch","useDispatch","useSelector","htmlFor","className","FilterSCSS","onChange","event","filterValue","target","value","toLowerCase","type","name","placeholder","BASE_STATE","number","useState","setState","eve","prevState","onSubmit","preventDefault","newContact","some","x","alert","addContact","ContactFormSCSS","pattern","title","required","delContacts","deleteContact","filterOne","contact","includes","list","ContactListSCSS","map","id","onClick","useEffect","fetchAll","PhonebookSCSS","Loader"],"sourceRoot":""}